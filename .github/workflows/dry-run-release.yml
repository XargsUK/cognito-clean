name: "Dry-run TestPyPI release on demand"
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Dry-run release version identifier"
        required: true

jobs:
  dry-run-release:
    name: "Dry run Release v${{ github.event.inputs.version }}"
    if: ${{ github.repository_owner == 'XargsUK' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies with Poetry
        run: |
          poetry install
      - name: Bump version in pyproject.toml
        run: poetry run python .github/scripts/update_version.py pyproject.toml ${{ github.event.inputs.version }}
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --exit-zero --tee --output-file=flake8-report
      - name: Test with pytest and coverage
        run: |
          poetry run coverage run -m pytest --junitxml=pytest-report.xml tests
          poetry run coverage xml -o coverage-pytest.xml
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Build with Poetry
        run: |
          poetry build
      - name: Commit & tag version bump in Git
        uses: EndBug/add-and-commit@v9
        with:
          add: "pyproject.toml"
          message: "Bump version to ${{ github.event.inputs.version }}"
          tag: "v${{ github.event.inputs.version }}"
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true